FROM ubuntu:noble

ENV DEBIAN_FRONTEND noninteractive

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        locales \
    && echo "$LANG UTF-8" >> /etc/locale.gen \
    && locale-gen \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# =================================================================
# Systemd & dbus
# =================================================================
RUN apt-get update -y \
    && apt-get install -y \
        dbus \
        dbus-x11 \
        systemd \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && dpkg-divert --local --rename --add /sbin/udevadm \
    && ln -s /bin/true /sbin/udevadm
RUN systemctl disable systemd-resolved
VOLUME ["/sys/fs/cgroup"]
STOPSIGNAL SIGRTMIN+3
CMD [ "/sbin/init" ]

# =================================================================
# GNOME desktop
# =================================================================
RUN apt-get update -y \
    && apt-get install -y \
        ca-certificates \
        ubuntu-gnome-desktop \
    && apt-get remove gnome-initial-setup -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# =================================================================
# VNC Server
# =================================================================

# Install TigerVNC standalone server
RUN apt-get update \
  && apt-get install -y tigervnc-common tigervnc-scraping-server tigervnc-standalone-server tigervnc-xorg-extension \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
# NOTE logout will stop tigervnc service -> need to manually start (gdm for graphical login is not working)

COPY services/tigervnc@.service /etc/systemd/system/tigervnc@.service
ENV DISPLAY=:2
RUN systemctl enable tigervnc@:2

# =================================================================
# Applications
# =================================================================
RUN wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && dpkg -i google-chrome-stable_current_amd64.deb \
    && rm google-chrome-stable_current_amd64.deb

# Snapd Firefox has problems running in a container, so install from Mozilla PPA
RUN add-apt-repository ppa:mozillateam/ppa \
    && echo 'Package: *\nPin: release o=LP-PPA-mozillateam\nPin-Priority: 1001' | tee /etc/apt/preferences.d/mozilla \
    && apt-get update -y \
    && apt-get install -y --allow-downgrades firefox \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        sudo \
        wget \
        libxfont-dev \
        net-tools \
        iputils-ping \
        traceroute \
        vim \
        nano \
        gedit gedit-plugins \
        gnome-tweaks \
        gnome-shell-extensions \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# =================================================================
# Nvidia CUDA
# =================================================================
RUN apt-get update && apt-get install -y \
    nvidia-cuda-toolkit \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# =================================================================
# VirtualGL
# =================================================================
ARG VIRTUALGL_VERSION=3.1

# Install libegl1-mesa from Jammy (required by VirtualGL, but not available on Noble)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl libegl1 && \
    curl -fsSL http://archive.ubuntu.com/ubuntu/pool/universe/m/mesa/libegl1-mesa_22.0.1-1ubuntu2_amd64.deb \
    -o /tmp/libegl1-mesa_22.0.1-1ubuntu2_amd64.deb \
    && dpkg -i /tmp/libegl1-mesa_22.0.1-1ubuntu2_amd64.deb \
    && rm -f /tmp/libegl1-mesa_22.0.1-1ubuntu2_amd64.deb

RUN apt-get update && apt-get install -y --no-install-recommends \
    git apt-utils python3-pip python3-venv less lsof htop \
    mesa-utils libglu1-mesa libxtst6 libxv1 \
    make cmake python3 python-is-python3 x11-xkb-utils xauth xfonts-base xkb-data && \
    rm -rf /var/lib/apt/lists/* && \
    cd /tmp && \
    curl -fsSL \
        https://sourceforge.net/projects/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb \
        -o /tmp/virtualgl_${VIRTUALGL_VERSION}_amd64.deb && \
    dpkg -i /tmp/virtualgl_${VIRTUALGL_VERSION}_amd64.deb && \
    rm -f /tmp/*.deb

ENV PATH ${PATH}:/opt/VirtualGL/bin

# =================================================================
# ROS2 Jazzy installation
# =================================================================
ARG ROS_DISTRO=jazzy
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

RUN set -eux; \
       key='C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654'; \
       export GNUPGHOME="$(mktemp -d)"; \
       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
       mkdir -p /usr/share/keyrings; \
       gpg --batch --export "$key" > /usr/share/keyrings/ros2-latest-archive-keyring.gpg; \
       gpgconf --kill all; \
       rm -rf "$GNUPGHOME"

RUN echo "deb [ signed-by=/usr/share/keyrings/ros2-latest-archive-keyring.gpg ] http://packages.ros.org/ros2/ubuntu noble main" > /etc/apt/sources.list.d/ros2-latest.list

RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-ros-core=0.11.0-1* \
    python3-rosdep \
    python3-colcon-common-extensions \
    build-essential \
    ros-${ROS_DISTRO}-rviz2 \
    ros-${ROS_DISTRO}-ros-gz \
    && rm -rf /var/lib/apt/lists/*

RUN rosdep init

# Hide update notification:
# =================================================================
RUN echo "Hidden=true" >> /etc/xdg/autostart/update-notifier.desktop
# Set timezone:
RUN rm -rf /etc/localtime
RUN ln -s /usr/share/zoneinfo/Europe/Tallinn /etc/localtime

SHELL ["/bin/bash", "-c"]
# Create unprivileged user
# NOTE user hardcoded in tigervnc.service
# NOTE alternative is to use libnss_switch and create user at runtime -> use entrypoint script
ARG UID=2000
ARG USER=kasutaja
ARG PASSWD=remrob
RUN useradd ${USER} -u ${UID} -U -d /home/${USER} -m -s /bin/bash && \
    groupadd vglusers && \
    usermod -aG vglusers ${USER}

RUN echo "${USER} ALL=(ALL) NOPASSWD: ALL, !/bin/su, !/bin/bash, !/bin/sh" > "/etc/sudoers.d/${USER}"
RUN echo "${USER}:${PASSWD}" | chpasswd
ENV USER="${USER}" \
    HOME="/home/${USER}"

# Setup ROS2 workspace
RUN mkdir -p $HOME/ros2_ws/src
WORKDIR "${HOME}/ros2_ws/src"
RUN git clone https://github.com/ros2/demos.git -b jazzy \
    && source /opt/ros/jazzy/setup.bash \
    && rosdep update \
    && apt update \
    && rosdep install -i --from-path . --rosdistro jazzy --ignore-src -y \
    && cd "${HOME}/ros2_ws" && colcon build \
    && rm -rf /var/lib/apt/lists/*

USER "${USER}"
WORKDIR "${HOME}"

# Set up VNC
RUN mkdir -p $HOME/.vnc
COPY system/xstartup $HOME/.vnc/xstartup

# GNOME customized config
COPY system/user-sysd $HOME/.config/dconf/user
COPY img/forest_mist.jpg $HOME/Pictures/Wallpapers/

# sudo and VirtualGL compatibility: https://groups.google.com/g/virtualgl-users/c/It-4AmVw6qA (Hide error outputs)
RUN echo "alias sudo='env -u LD_PRELOAD sudo'" >> $HOME/.bashrc
RUN echo "alias ping='env -u LD_PRELOAD ping'" >> $HOME/.bashrc

RUN echo "source /.env.sh" >> $HOME/.bashrc


WORKDIR "${HOME}"
# switch back to root to start systemd
USER root
RUN chown -R $USER:$USER $HOME

EXPOSE 5902

RUN systemctl mask user@${UID}.service
RUN mkdir -p /run/user/${UID} && chown -R ${UID}:${UID} /run/user/${UID}
ENV XDG_RUNTIME_DIR=/run/user/${UID}

COPY docker-entrypoint-noble.sh /.docker-entrypoint.sh
COPY scripts/env.sh /.env.sh

ENTRYPOINT ["/.docker-entrypoint.sh"]